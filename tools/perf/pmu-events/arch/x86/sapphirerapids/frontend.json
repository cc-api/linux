[
    {
        "BriefDescription": "Counts the total number when the front end is resteered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x60",
        "EventName": "BACLEARS.ANY",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of times the front-end is resteered when it finds a branch instruction in a fetch line. This occurs for the first time a branch instruction is fetched or when the branch is not tracked by the BPU (Branch Prediction Unit) anymore.",
        "SampleAfterValue": "100003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Regen stalls",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x87",
        "EventName": "DECODE.MS_BUSY",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "This event counts the number of regen stalls.\r\nNote: The counter increments each time when it takes more than one cycle for ILD to handle 16B line.",
        "SampleAfterValue": "500009",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "TBD",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x87",
        "EventName": "DECODE.REGEN",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "500009",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Decode Stream Buffer (DSB)-to-MITE transitions count.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "CounterMask": "1",
        "EdgeDetect": "1",
        "EventCode": "0x61",
        "EventName": "DSB2MITE_SWITCHES.COUNT",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of Decode Stream Buffer (DSB a.k.a. Uop Cache)-to-MITE speculative transitions.",
        "SampleAfterValue": "100003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Count number of times a valid Decode Stream Buffer (DSB) fill has been actually cancelled for any reason.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.ALL_CANCEL",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "This event counts the number of times when a valid Decode Stream Buffer (DSB) fill has been actually cancelled not because of exceeding the way limit. Cancelling Decode Stream Buffer (DSB) fill may also result, for example, from Decode Stream Buffer Queue (DSBQ) snoop hits. This is because the Decode Stream Buffer (DSB) full hit is guaranteed to delivery from Decode Stream Buffer (DSB). In the B step a four-bit counter will count the number of cancel operations and will reverse the priority upon look ing up the same set.",
        "SampleAfterValue": "1000003",
        "UMask": "0xa"
    },
    {
        "BriefDescription": "Cycles when Decode Stream Buffer (DSB) fill encounter more than 3 Decode Stream Buffer (DSB) lines",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.EXCEED_DSB_LINES",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "This event counts cycles when the Decode Stream Buffer (DSB) fill encounter more than three Decode Stream Buffer (DSB) lines in a 32-byte piece of code.  The additional lines over 3 are cancelled fills.",
        "SampleAfterValue": "1000003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Cycles in which a thread needs DSB fill buffer, but the fill buffer is occupied by the other thread",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.FB_STALL_OT",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Count number of times a valid DSB fill has been actually cancelled for any reason.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.OTHER_CANCEL",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "This event counts the number of times when a valid DSB fill has been actually cancelled not because of exceeding the way limit. Cancelling DSB fill may also result, for example, from DSBQ snoop hits. This is because the DSB full hit is guaranteed to delivery from DSB. In the B step a four-bit counter will count the number of cancel operations and will reverse the priority upon look ing up the same set.",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Fill encountered successful fetch-line fill",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x62",
        "EventName": "DSB_FILL.SUCCESSFUL",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "This event counts successful fetch-line fills of the DSB Fill.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "DSB flush occurrences",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EdgeDetect": "1",
        "EventCode": "0x64",
        "EventName": "DSB_MISC.FLUSH",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "This event counts overall Decode Stream Buffer (DSB) flushes (occurrences).",
        "SampleAfterValue": "100003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Count number of times 'bad BAClears' where the BAClear target missed the DSB.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x63",
        "EventName": "DSB_QUEUE.BACLEAR_DSB_MISS",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Count number of times 'bad JEClears' where the JEClear target missed the DSB.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x63",
        "EventName": "DSB_QUEUE.JECLEAR_DSB_MISS",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 128 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_128",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x608006",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 128 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 256 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_256",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x610006",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 256 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 2 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_2",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x200206",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 3 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_3",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x300206",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 32 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_32",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x602006",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 32 cycles. During this period the front-end delivered no uops.",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 512 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_512",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x620006",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 512 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 64 cycles which was not interrupted by a back-end stall.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.LATENCY_GE_64",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x604006",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Counts retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 64 cycles which was not interrupted by a back-end stall.",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "TBD",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0xc6",
        "EventName": "FRONTEND_RETIRED.MS_FLOWS",
        "MSRIndex": "0x3F7",
        "MSRValue": "0x8",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "SampleAfterValue": "100007",
        "TakenAlone": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.HIT",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_64B.IFTAG_HIT",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.MISS",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_64B.IFTAG_MISS",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.STALLS",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_64B.IFTAG_STALL",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.STALLS_INUSE",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_64B.IFTAG_STALL_INUSE",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.STALL_ISB",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_64B.IFTAG_STALL_ISB",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x8"
    },
    {
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.HIT",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.MISS",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_DATA.STALLS",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x80",
        "EventName": "ICACHE_DATA.STALL",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "500009",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.HIT",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity. Accounts for both cacheable and uncacheable accesses.",
        "SampleAfterValue": "200003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.MISS",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity. Accounts for both cacheable and uncacheable accesses.",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.STALLS",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALL",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x4"
    },
    {
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALLS_INUSE",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event ICACHE_TAG.STALLS_INUSE",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALL_INUSE",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x10"
    },
    {
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x83",
        "EventName": "ICACHE_TAG.STALL_ISB",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Number of uops delivered to IDQ from the DSB Stream Cache. Including uops that may bypass the IDQ.",
        "Counter": "0,1,2,3",
        "EventCode": "0x79",
        "EventName": "IDQ.DSB_STREAM_CACHE",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Cycles when uops are being delivered to IDQ while MS is busy",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "CounterMask": "1",
        "EventCode": "0x79",
        "EventName": "IDQ.MS_CYCLES_ANY",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Uops maybe initiated by Decode Stream Buffer (DSB) or MITE.",
        "SampleAfterValue": "2000003",
        "UMask": "0x20"
    },
    {
        "BriefDescription": "Cycles when optimal number of uops was delivered to the back-end when the back-end is not stalled",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "1",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_FE_WAS_OK",
        "Invert": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Counts the number of cycles when the optimal number of uops were delivered by the Instruction Decode Queue (IDQ) to the back-end of the pipeline when there was no back-end stalls. This event counts for one SMT thread in a given cycle.",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Cycles when 1 or more uops were delivered by the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "6",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_GE_1_UOP_DELIV.CORE",
        "Invert": "1",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Cycles per thread when less than 1 uop is delivered by the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "5",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_1_UOP_DELIV.CORE",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Cycles with less than 2 uops delivered by the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "4",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_2_UOP_DELIV.CORE",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Cycles with less than 2 uops delivered by the front-end.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Cycles with less than 3 uops delivered by the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "3",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_3_UOP_DELIV.CORE",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Cycles with less than 3 uops delivered by the front-end.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Cycles with less than 4 uops delivered by the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "2",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_4_UOP_DELIV.CORE",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Cycles with less than 4 uops delivered by the front-end.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Cycles with less than 5 uops delivered by the front end.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "1",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_5_UOP_DELIV.CORE",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "Cycles with less than 5 uops delivered by the front-end.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts when the other thread delivers uops and this thread IDQ is empty.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.FE_STALL_OT_IDQ_EMPTY",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "This event increments on the IDQ_UOPS_NOT_DELIVERED.OT_IDQ_EMPTY or IDQ_UOPS_NOT_DELIVERED.FE_STALL increment value when any of these events happens.",
        "SampleAfterValue": "2000003",
        "UMask": "0x3"
    },
    {
        "BriefDescription": "Increments by four when current thread IDQ is empty while another is delivering uops",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.OT_IDQ_EMPTY",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "This event counter increments by four each cycle when the current thread IDQ is empty while another thread is delivering uops. This is Mutually Exclusive wrt umask 0.",
        "SampleAfterValue": "2000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts when the other thread delivers uops and this thread IDQ is empty.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5,6,7",
        "CounterMask": "1",
        "EventCode": "0x9c",
        "EventName": "IDQ_UOPS_NOT_DELIVERED.OT_IDQ_EMPTY_CYCLES",
        "PEBScounters": "0,1,2,3,4,5,6,7",
        "PublicDescription": "This event counts cycles when the current thread IDQ is empty while another thread is delivering uops. This is Mutually Exclusive wrt umask 0.",
        "SampleAfterValue": "2000003",
        "UMask": "0x2"
    }
]